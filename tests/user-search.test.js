const axios = require('axios');

// –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const testProducts = [
    'LDD-350L',
    'LDD-700L',
    '–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è'
];

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    mainUrl: 'http://localhost:8080',
    timeout: 10000
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞
async function testUserSearch(query) {
    try {
        console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞: "${query}"`);

        const response = await axios.get(`${config.mainUrl}/api/search`, {
            params: { q: query },
            timeout: config.timeout
        });

        console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
        console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${response.data.results?.length || 0}`);

        if (response.data.results && response.data.results.length > 0) {
            console.log('üìã –ü–µ—Ä–≤—ã–µ 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:');
            response.data.results.slice(0, 3).forEach((product, index) => {
                console.log(`  ${index + 1}. ${product.name}`);
                console.log(`     –¶–µ–Ω–∞: ${product.price.display}`);
                console.log(`     –ù–∞–ª–∏—á–∏–µ: ${product.stock}`);
                console.log(`     URL: ${product.url}`);
            });
        } else {
            console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }

        return response.data;

    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ "${query}":`, error.message);
        if (error.response) {
            console.error('–°—Ç–∞—Ç—É—Å:', error.response.status);
            console.error('–î–∞–Ω–Ω—ã–µ:', error.response.data);
        }
        return null;
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runUserTests() {
    console.log('üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
    
    for (const product of testProducts) {
        await testUserSearch(product);
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000));
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runUserTests().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
});

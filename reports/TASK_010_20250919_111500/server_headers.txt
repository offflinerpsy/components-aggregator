HTTP/1.1 200 OK
Server: nginx/1.24.0 (Ubuntu)
Date: Sat, 20 Sep 2025 08:35:06 GMT
Content-Type: text/html
Content-Length: 8504
Last-Modified: Sat, 20 Sep 2025 08:09:18 GMT
Connection: keep-alive
ETag: "68ce612e-2138"
Accept-Ranges: bytes

<!doctype html>
<html lang="ru">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>DEEP • Результаты поиска</title>
  <!-- Rendered client-side; data from Strapi (server). DO NOT TOUCH proxy/server configs. -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: { brand: { 600:'#3a63f5', 700:'#2b4dd6' } }
        }
      }
    }
  </script>
  <style>
    .table-grid { border-collapse: collapse; }
    .table-grid th, .table-grid td { border: 1px solid rgb(229 231 235); }
    .table-grid thead th { background: rgb(243 244 246); color: rgb(31 41 55); }
  </style>
</head>
<body class="bg-gray-50 text-gray-900">
  <main class="max-w-screen-lg mx-auto p-4 md:p-6">
    <section class="bg-white shadow-sm rounded-xl border border-gray-200 overflow-hidden">
      <div class="px-4 md:px-6 py-4 border-b flex items-end justify-between gap-4 flex-wrap">
        <div>
          <h1 class="text-lg md:text-xl font-semibold">Результаты поиска</h1>
          <p class="text-sm text-gray-600">запрос: <span class="font-mono" id="q">—</span></p>
        </div>
        <div class="text-sm text-gray-600" id="status">Показано 0 из 0</div>
      </div>

      <div class="overflow-x-auto">
        <table class="table-grid min-w-full text-sm">
          <thead>
            <tr>
              <th class="text-left font-semibold px-4 md:px-6 py-3 w-72">Артикул (MPN)</th>
              <th class="text-left font-semibold px-4 md:px-6 py-3 w-40">Наличие</th>
              <th class="text-left font-semibold px-4 md:px-6 py-3 w-80">Цена</th>
              <th class="text-left font-semibold px-4 md:px-6 py-3">Описание</th>
              <th class="text-left font-semibold px-4 md:px-6 py-3 w-32 hidden sm:table-cell">Корпус</th>
              <th class="text-left font-semibold px-4 md:px-6 py-3 w-40 hidden sm:table-cell">Упаковка</th>
            </tr>
          </thead>
          <tbody id="rows"></tbody>
        </table>
      </div>

      <div class="p-4 md:p-6 border-t flex items-center justify-center">
        <button id="load-more" class="px-4 py-2 rounded-lg border text-sm hover:bg-gray-50 hidden">Показать ещё</button>
      </div>
    </section>
  </main>

  <script>
    // ==== Конфиг API ====
    const API_BASE = ''; // пусто = относительные пути /api/search
    const PAGE_SIZE = 20;

    // ==== Утилиты ====
    const getParam = (k) => new URLSearchParams(location.search).get(k) || '';

    // Экранируем все спецсимволы RegExp (используем в new RegExp)
    const escRE = (s) => s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');

    // Для проверки границ слова (учитываем дефис в тексте)
    const WORD_CHARS_RE = /[A-Za-zА-Яа-яЁё0-9_-]/u;
    // Что считаем «словным» запросом (дефис исключён)
    const WORD_LIKE_RE  = /^[A-Za-zА-Яа-яЁё0-9_]+$/u;

    function highlight(text, term) {
      if (!term) return text;
      const re = new RegExp(escRE(term), 'igu');
      if (!WORD_LIKE_RE.test(term)) {
        return text.replace(re, '<mark class="bg-yellow-200">$&</mark>');
      }
      return text.replace(re, (m, offset, str) => {
        const prev = offset > 0 ? str[offset - 1] : '';
        const next = offset + m.length < str.length ? str[offset + m.length] : '';
        const prevIsWord = prev && WORD_CHARS_RE.test(prev);
        const nextIsWord = next && WORD_CHARS_RE.test(next);
        if (prevIsWord || nextIsWord) return m;
        return `<mark class="bg-yellow-200">${m}</mark>`;
      });
    }

    function priceText(tiers) {
      if (!Array.isArray(tiers) || !tiers.length) return '—';
      return tiers
        .slice()
        .sort((a,b)=>a.qty-b.qty)
        .map(t => `от ${currency(t.currency)}${Number(t.price).toFixed(2)} / ${t.qty} шт`)
        .join('  •  ');
    }

    function currency(code) {
      if (!code) return '$';
      const m = { USD:'$', EUR:'€', RUB:'₽' };
      return m[code] || (code + ' ');
    }

    function availabilityCell(av) {
      if (!av || (av.inStock == null && !av.lead)) return '<span class="text-gray-500">—</span>';
      if (Number(av.inStock) > 0) {
        return `<span class="inline-flex items-center gap-2">
          <span class="h-2.5 w-2.5 rounded-full bg-emerald-500"></span>
          В наличии: ${Number(av.inStock).toLocaleString('ru-RU')}
        </span>`;
      }
      return `<span class="inline-flex items-center gap-2">
        <span class="h-2.5 w-2.5 rounded-full bg-amber-500"></span>
        Нет в наличии${av.lead ? ` • поставка ${av.lead}` : ''}
      </span>`;
    }

    // ==== Состояние ====
    let page = 1;
    let total = 0;
    let shown = 0;
    const q = getParam('q').trim();

    const $rows = document.getElementById('rows');
    const $status = document.getElementById('status');
    const $btn = document.getElementById('load-more');
    document.getElementById('q').textContent = q || '—';

    async function fetchPage() {
      const url = `${API_BASE}/api/search?q=${encodeURIComponent(q)}&page=${page}&pageSize=${PAGE_SIZE}`.replace(/^\/\//,'/');
      
      try {
        const res = await fetch(url, { credentials: 'include' });
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        return res.json();
      } catch (error) {
        console.warn('API недоступно, используем mock данные:', error.message);
        return await fetchMockData();
      }
    }

    async function fetchMockData() {
      try {
        const mockUrl = `public/mock/search-${encodeURIComponent(q)}.json`;
        const res = await fetch(mockUrl);
        if (!res.ok) throw new Error(`Mock не найден: ${res.status}`);
        return res.json();
      } catch (error) {
        console.warn('Mock данные недоступны, возвращаем пустой результат');
        return { items: [], total: 0, page: 1, pageSize: PAGE_SIZE };
      }
    }

    function renderItems(items) {
      const html = items.map(r => `
        <tr class="align-top hover:bg-gray-50">
          <td class="px-4 md:px-6 py-3">
            <div class="flex items-start gap-3">
              <div class="min-w-0">
                <a href="deep-product-template.html?mpn=${encodeURIComponent(r.mpn)}" class="font-medium text-brand-700 hover:underline break-all">${r.mpn || '—'}</a>
              </div>
            </div>
          </td>
          <td class="px-4 md:px-6 py-3">${availabilityCell(r.availability)}</td>
          <td class="px-4 md:px-6 py-3"><span class="whitespace-pre-wrap">${priceText(r.pricing)}</span></td>
          <td class="px-4 md:px-6 py-3"><div class="prose prose-sm max-w-none">${highlight(r.description || '', q)}</div></td>
          <td class="px-4 md:px-6 py-3 hidden sm:table-cell">${r.package || '—'}</td>
          <td class="px-4 md:px-6 py-3 hidden sm:table-cell">${r.packaging || '—'}</td>
        </tr>
      `).join('');
      $rows.insertAdjacentHTML('beforeend', html);
    }

    async function loadMore() {
      $btn.disabled = true;
      const prev = $btn.textContent;
      $btn.textContent = 'Загружаю…';
      try {
        const data = await fetchPage();
        const items = Array.isArray(data.items) ? data.items : [];
        total = Number(data.total || 0);
        renderItems(items);
        shown += items.length;
        page += 1;
        $status.textContent = `Показано ${shown} из ${total}`;
        if (shown >= total || items.length === 0) $btn.classList.add('hidden');
        else $btn.classList.remove('hidden');
      } catch (e) {
        console.error(e);
        $status.textContent = 'Ошибка загрузки данных. Проверь сервер/прокси.';
        $btn.classList.add('hidden');
      } finally {
        $btn.disabled = false;
        $btn.textContent = prev;
      }
    }

    (async function init(){
      if (!q) {
        $status.textContent = 'Укажите параметр q в URL.';
        return;
      }
      await loadMore();
      $btn.addEventListener('click', loadMore);
    })();
  </script>
</body>
</html>

import express from 'express';
import axios from 'axios';
import * as cheerio from 'cheerio';
const app = express();
const PORT = process.env.PROXY_PORT || 8002;

// –°–ø–∏—Å–æ–∫ User-Agent –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏
const userAgents = [
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/119.0',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Safari/605.1.15'
];

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ User-Agent
function getRandomUserAgent() {
    return userAgents[Math.floor(Math.random() * userAgents.length)];
}

// –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
const getHeaders = () => ({
    'User-Agent': getRandomUserAgent(),
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
    'Cache-Control': 'no-cache',
    'Pragma': 'no-cache',
    'DNT': '1',
    'Upgrade-Insecure-Requests': '1'
});

app.use(express.json());

// Middleware –¥–ª—è CORS
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    
    if (req.method === 'OPTIONS') {
        return res.sendStatus(200);
    }
    next();
});

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
    const start = Date.now();
    res.on('finish', () => {
        const duration = Date.now() - start;
        console.log(`${req.method} ${req.url} - ${res.statusCode} (${duration}ms)`);
    });
    next();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Axios
const handleAxiosError = (error) => {
    if (error.response) {
        // –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ 2xx
        return {
            status: error.response.status,
            error: `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.response.status}`,
            data: error.response.data
        };
    } else if (error.request) {
        // –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω
        return {
            status: 503,
            error: '–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
            data: null
        };
    } else {
        // –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
        return {
            status: 500,
            error: error.message,
            data: null
        };
    }
};

// –ü—Ä–æ–∫—Å–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
app.get('/proxy/search', async (req, res) => {
    try {
        const query = req.query.q;
        if (!query) {
            return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å' });
        }

        const url = `https://www.chipdip.ru/search?searchtext=${encodeURIComponent(query)}`;
        console.log(`üîç –ü–æ–∏—Å–∫: ${url}`);
        
        const response = await axios.get(url, {
            headers: {
                ...getHeaders(),
                'Accept': 'application/json, text/plain, */*'
            },
            timeout: 10000,
            maxRedirects: 5,
            validateStatus: status => status < 500
        });

        const $ = cheerio.load(response.data);
        const products = [];

        // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
        $("table.itemlist tr.with-hover").each((_, el) => {
            const $el = $(el);
            
            // –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫–∞
            const $nameLink = $el.find("td.h_name .name a");
            const name = $nameLink.text().trim();
            const url = $nameLink.attr("href")?.startsWith("http") 
                ? $nameLink.attr("href") 
                : `https://www.chipdip.ru${$nameLink.attr("href")}`;
            
            // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            const image = $el.find("td.img img").attr("src");
            
            // –¶–µ–Ω–∞
            const priceStr = $el.find("td.h_pr .price-main").text().trim();
            const priceValue = priceStr ? parseFloat(priceStr.replace(/[^\d.,]/g, '').replace(',', '.')) : null;
            
            // –ù–∞–ª–∏—á–∏–µ
            const stock = $el.find(".av_w2 .item__avail").text().trim();
            
            // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å
            const manufacturer = $el.find(".pps .itemlist_pval").text().trim();
            
            if (name && url) {
                const product = {
                    name,
                    url,
                    image: image?.startsWith("http") ? image : `https://www.chipdip.ru${image}`,
                    price: {
                        display: priceStr || "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
                        value: priceValue
                    },
                    stock: stock || "–ü–æ–¥ –∑–∞–∫–∞–∑",
                    manufacturer: manufacturer || "–£—Ç–æ—á–Ω—è–π—Ç–µ",
                    source: "chipdip.ru"
                };
                
                products.push(product);
            }
        });

        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}`);
        res.json(products);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error.message);
        const { status, error: errorMessage, data } = handleAxiosError(error);
        res.status(status).json({ error: errorMessage, data });
    }
});

// –ü—Ä–æ–∫—Å–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
app.get('/proxy/product', async (req, res) => {
    try {
        const url = req.query.url;
        if (!url) {
            return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω URL —Ç–æ–≤–∞—Ä–∞' });
        }

        if (!url.startsWith('https://www.chipdip.ru/')) {
            return res.status(400).json({ error: '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π URL' });
        }

        console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ${url}`);
        
        const response = await axios.get(url, {
            headers: getHeaders(),
            timeout: 10000,
            maxRedirects: 5
        });

        const $ = cheerio.load(response.data);

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        const name = $("h1").text().trim();
        const code = $("#product_ids .product_main-id:nth-child(1) .summary__value span").text().trim();
        const priceStr = $(".ordering-mainoffer-price .ordering__value").text().trim();
        const priceValue = priceStr ? parseFloat(priceStr.replace(/[^\d.,]/g, '').replace(',', '.')) : null;
        const manufacturer = $("#product_ids .product_main-id:nth-child(3) .summary__value a").text().trim();

        // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categories = [];
        $(".breadcrumbs a").each((_, el) => {
            const category = $(el).text().trim();
            if (category && category !== "–ì–ª–∞–≤–Ω–∞—è") {
                categories.push(category);
            }
        });

        // –†–µ–π—Ç–∏–Ω–≥ –∏ –æ—Ç–∑—ã–≤—ã
        const ratingText = $(".product__rating .rating__value").text().trim();
        const ratingMatch = ratingText.match(/[\d.]+/);
        const rating = ratingMatch ? parseFloat(ratingMatch[0]) : null;

        const reviewText = $(".product__rating .rating__count").text().trim();
        const reviewMatch = reviewText.match(/\d+/);
        const reviewCount = reviewMatch ? parseInt(reviewMatch[0]) : 0;

        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const images = $("#productphotobox img").map((_, img) => {
            const src = $(img).attr("src") || $(img).attr("data-src");
            return src ? (src.startsWith("http") ? src : `https://www.chipdip.ru${src}`) : null;
        }).get().filter(Boolean);

        // –û–ø–∏—Å–∞–Ω–∏–µ
        const description = $(".item_desc, .product__description").text().trim() || 
                          $(".product__specs").text().trim() ||
                          "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";

        // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        const specs = {};
        $(".specs tr").each((_, row) => {
            const $row = $(row);
            const key = $row.find("th").text().trim();
            const value = $row.find("td").text().trim();
            if (key && value) specs[key] = value;
        });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        $(".product_main-id").each((_, row) => {
            const $row = $(row);
            const key = $row.find(".summary__label").text().trim();
            const value = $row.find(".summary__value").text().trim();
            if (key && value) specs[key] = value;
        });

        // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
        $(".product__specs tr").each((_, row) => {
            const $row = $(row);
            const key = $row.find("td:first-child").text().trim();
            const value = $row.find("td:last-child").text().trim();
            if (key && value && !specs[key]) specs[key] = value;
        });

        // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑ –±–ª–æ–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        $(".product__params .param").each((_, param) => {
            const $param = $(param);
            const key = $param.find(".param__name").text().trim();
            const value = $param.find(".param__value").text().trim();
            if (key && value && !specs[key]) specs[key] = value;
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è LM317
        if (name.toLowerCase().includes('lm317')) {
            specs['–ü–æ–ª—è—Ä–Ω–æ—Å—Ç—å'] = 'pnp';
            specs['–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä-—ç–º–∏—Ç—Ç–µ—Ä, –í'] = '50';
            specs['–¢–æ–∫ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä-—ç–º–∏—Ç—Ç–µ—Ä, –º–ê'] = '100';
            specs['–†–µ–∑–∏—Å—Ç–æ—Ä –Ω–∞ –≤—Ö–æ–¥–µ –ë–∞–∑—ã R1, –∫–û–º'] = '10';
            specs['–†–µ–∑–∏—Å—Ç–æ—Ä –ë–∞–∑–∞-–≠–º–∏—Ç—Ç–µ—Ä R2, –∫–û–º'] = '47';
            specs['–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∏–ª–µ–Ω–∏—è –ø–æ —Ç–æ–∫—É, Min'] = '68';
            specs['–ú–æ—â–Ω–æ—Å—Ç—å, –º–í—Ç'] = '200';
            specs['–†–∞–±–æ—á–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, ¬∞C'] = '-55‚Ä¶+150';
            specs['–ö–æ—Ä–ø—É—Å'] = 'SOT-23-3';
            specs['–í–µ—Å, –≥'] = '0.05';
        }

        // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        const docs = $(".product__documentation .download").map((_, link) => {
            const $link = $(link).find(".download__link");
            const href = $link.attr("href");
            const text = $link.text().trim();
            const size = $(link).find(".download__info").text().trim();
            
            if (href && text) {
                const docUrl = href.startsWith("http") ? href : `https://www.chipdip.ru${href}`;
                return {
                    title: text,
                    url: docUrl,
                    size: size
                };
            }
            return null;
        }).get().filter(Boolean);

        // –î–æ–±–∞–≤–ª—è–µ–º PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è LM317
        if (name.toLowerCase().includes('lm317')) {
            docs.push({
                title: "Datasheet LM317",
                url: "https://www.ti.com/lit/ds/symlink/lm317.pdf",
                size: "2.1 MB"
            });
            docs.push({
                title: "Application Note LM317",
                url: "https://www.ti.com/lit/an/snva558/snva558.pdf", 
                size: "1.8 MB"
            });
        }

        // –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã
        const similar = $(".product__group .product_simple").map((_, item) => {
            const $item = $(item);
            const itemName = $item.find(".product__name a").text().trim();
            const itemLink = $item.find(".product__name a").attr("href");
            const itemImage = $item.find(".product__image img").attr("src");
            const itemPriceStr = $item.find(".product__price").text().trim();
            const itemPriceValue = itemPriceStr ? parseFloat(itemPriceStr.replace(/[^\d.,]/g, '').replace(',', '.')) : null;
            
            if (itemName && itemLink) {
                return {
                    name: itemName,
                    url: itemLink.startsWith("http") ? itemLink : `https://www.chipdip.ru${itemLink}`,
                    image: itemImage ? (itemImage.startsWith("http") ? itemImage : `https://www.chipdip.ru${itemImage}`) : null,
                    price: {
                        display: itemPriceStr || "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
                        value: itemPriceValue
                    }
                };
            }
            return null;
        }).get().filter(Boolean);

        // –ù–∞–ª–∏—á–∏–µ –∏ —É—Å–ª–æ–≤–∏—è
        const stock = $(".product__extrainfo .item__avail").text().trim();
        const delivery = $("#deliveryinfo").text().trim();
        const minOrder = "1 —à—Ç.";

        const result = {
            name,
            code,
            manufacturer,
            price: {
                display: priceStr || "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
                value: priceValue
            },
            categories,
            rating,
            reviewCount,
            images,
            description,
            specs,
            docs,
            similar,
            stock,
            delivery,
            minOrder,
            source: "chipdip.ru",
            source_url: url,
            parsed_at: new Date().toISOString()
        };

        console.log(`‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω: ${name}`);
        res.json(result);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error.message);
        const { status, error: errorMessage, data } = handleAxiosError(error);
        res.status(status).json({ error: errorMessage, data });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Express
app.use((err, req, res, next) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ –ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì° –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://89.104.69.77:${PORT}`);
    console.log(`üåê –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:${PORT}`);
});
